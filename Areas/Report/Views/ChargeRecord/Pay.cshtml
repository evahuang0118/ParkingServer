@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>支付分组統計</title>
    <link href="~/Content/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/framework/css/console.css" rel="stylesheet" />
    <link href="~/Content/framework/css/animate.css" rel="stylesheet" />
    <link href="~/Content/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
    <script src="~/Content/jquery/jquery.min.js"></script>
    <script src="~/Content/layui/layui.js"></script>
    <script src="~/Content/framework/js/global.js"></script>
    <script src="~/Content/framework/js/com.js"></script>
    <script src="~/Content/echarts/echarts.min.js"></script>
    <script src="~/Content/Print/jQuery.print.js"></script>
    <style type="text/css">
        .layui-table-cell {
            height: auto !important;
            white-space: normal;
        }
    </style>
</head>
<body>
    <div class="panel animated fadeIn">
        <div class="panel-body">
            <fieldset class="layui-elem-field layuimini-search" id="search">
                <legend>搜索信息</legend>
                <div style="margin: 5px 5px 5px 5px">
                    <div class="layui-form layui-form-pane">
                        <div class="layui-form-item">

                            <div class="layui-inline">
                                <label class="layui-form-label" style="width:120px">支付時段範圍</label>
                                <div class="layui-input-inline">
                                    <input class="layui-input" id="Btime" name="Btime" placeholder="" autocomplete="off" />
                                </div>
                                <div class="layui-input-inline">
                                    <input class="layui-input" id="Etime" name="Etime" placeholder="" autocomplete="off" />
                                </div>
                            </div>
                            <div class="layui-inline">
                                <label class="layui-form-label">支付類型</label>
                                <div class="layui-input-inline">
                                    <select lay-ignore class="layui-input" name="PayType" lay-verify="required" id="PayType" style="width: 190px;"></select>
                                </div>
                            </div>

                            <div class="layui-inline">
                                <button id="btnSearch" class="toolbar-search-button layui-btn layui-btn-normal layui-btn-small">
                                    <i class="layui-icon">&#xe615;</i>搜 索
                                </button>
                                <button class="layui-btn layui-btn-normal" type="button" id="btnExcel">導出Excel</button>
                                <button class="layui-btn layui-btn-normal" type="button" id="btnPrint">列  印</button>
                            </div>

                        </div>
                    </div>
                </div>
            </fieldset>


            <blockquote class="layui-elem-quote layui-text" style="display:none;text-align:center" id="toolbarInfo">
                <span id="toolbar"></span>
            </blockquote>

            <div class="layui-row layui-col-space15">

                <div class="layui-col-md6">

                    <fieldset class="layui-elem-field layui-field-title" style="margin-top:2px;">
                        <legend><span style="font-size:14px;color:crimson">分類統計</span></legend>
                    </fieldset>

                    <table class="layui-hide" id="gridList" lay-filter="gridList"></table>

                    <div class="layui-collapse" lay-accordion="">
                        <div class="layui-colla-item">
                            <h2 class="layui-colla-title">
                                <i class="layui-icon">&#xe615;</i> 報表說
                            </h2>
                            <div class="layui-colla-content">
                                <p style="color:currentColor">
                                    1. 此報表根據查詢的時間段,分類統計每天各種支付方式的收支情況和數量
                                    <br>
                                    2. 系統默認只能查詢統計一個月的數據
                                    <br />
                                    3. 分類匯總對所有支付方式的支付金額和數量的分類匯總
                                    <br />
                                    4. 報表信息可以類型列印，導出Excel
                                </p>
                            </div>
                        </div>
                    </div>

                </div>

                    <div class="layui-col-md6">

                        <fieldset class="layui-elem-field layui-field-title" style="margin-top:2px;">
                            <legend><span style="font-size:14px;color:crimson">分類匯總</span></legend>
                        </fieldset>

                        <table class="layui-hide" id="gridLists" lay-filter="gridLists" style="margin-top:-25px; border:2px" lay-skin="row" lay-even=""></table>

                        <div id="columnarMap" class="layui-inline" style="width:620px;height:500px;display:none"></div>
                    </div>
            </div>
        </div>
    </div>
    <script src="~/Content/layui/layui.js" charset="utf-8"></script>
    <script src="~/Content/layui/layui.all.js"></script>
    <script src="~/Content/layui_exts/excel.js"></script>
</body>
</html>

<script type="text/javascript">


    layui.config({
        base: parent._baseUrl
    }).use(['jquery', 'form', 'layer', 'laydate'], function () {
        var layer = layui.layer;
        var form = layui.form;
        var laydate = layui.laydate;

        laydate.render({
            elem: "#Etime"
            , type: 'datetime'

        });
        laydate.render({
            elem: "#Btime"
            , type: 'datetime'

        });

        $("#PayType").bindSelect({
            url: "/Report/Aggregate/GetPayTypeList"
        });
    });

    layui.use(['form', 'table'], function () {
        var form = layui.form,
            table = layui.table;

        function initGrid() {
            table.render({
                elem: '#gridList',
                url: '/Report/ChargeRecord/Pay',
                where: {
                    PayType: $("#PayType").val(),
                    Btime: $("#Btime").val(),
                    Etime: $("#Etime").val(),
                },
                method: 'post',
                cellMinWidth: 80,
                height: 'full-120',
                cols: [[
                    { field: 'Date', title: '日  期', width: 110, style: 'color:blue' },
                    { field: 'PayName', width: 120, title: '支付方式' },
                    { field: 'tm', title: '合計金額', totalRow: true ,style:'text-align:right', templet: function (d) {return Number(d.tm).toFixed(0); }},
                    { field: 'Num', title: '合計筆數', totalRow: true, style: 'text-align:right'}
                ]],
                done: function (res, curr, count) {
                    layuiRowspan("Date", 1);
                    if (res.data == null || res.data.length == 0) {
                        $('.layui-table-total').css({ display: "none" })
                    }
                    setColor('.layui-table');
                    initGrids();
                }
            });
        }

        initGrid();

        function initGrids() {
            table.render({
                elem: '#gridLists',
                url: '/Report/ChargeRecord/SummaryPay',
                where: {
                    PayType: $("#PayType").val(),
                    Btime: $("#Btime").val(),
                    Etime: $("#Etime").val(),
                },
                method: 'post',
                cellMinWidth: 80,
                totalRow: true,
                even: true,
                cols: [[
                    { field: 'TypeName', title: '分   類', rowspan: 2 },
                    { title: '合計金額/佔比', colspan: 2, align: 'center' },
                    { field: 'PayCount', title: '合計筆數', rowspan: 2, align: 'right', totalRow: true},
                ],
                [
                    { field: 'Accounts', title: '金 額', align: 'right', totalRow: true, templet: function (d) { return Number(d.Accounts).toFixed(0); } },
                    { field: 'Type', title: '佔 比', align: 'right' },
                ]
                ],

                done: function (res) {
                    if (res.data == null || res.data.length == 0) {
                        $('.layui-table-total').css({ display: "none" })
                    }
                    else {
                        this.elem.next().find('.layui-table-total td[data-field="TypeName"]').parent().attr('style', "background:#d2d2d2;color:blue");

                        $("#columnarMap").show();

                        var xcoordinates = new Array();                    //x坐标内容
                        var ycoordinates = new Array();                   //y坐标内容
                        var bcoordinates = new Array();

                        var myChart = echarts.init(document.getElementById('columnarMap'));
                        myChart.clear();
                        var data = res.data;
                        for (i = 0; i < data.length; i++) {
                            var str = "";
                            xcoordinates[i] = data[i].TypeName;
                            ycoordinates[i] = data[i].PayCount;
                            bcoordinates[i] = data[i].Accounts;
                        }
                        // 交易笔数柱状图

                        var option = {
                            title: {
                                text: ''
                            },
                            tooltip: {
                                trigger: 'axis',
                                axisPointer: {
                                    type: 'cross',
                                    crossStyle: {
                                        color: '#999'
                                    }
                                }
                            },
                            toolbox: {
                                feature: {
                                    dataView: { show: true, readOnly: false },
                                    magicType: { show: true, type: ['line', 'bar'] },
                                    restore: { show: true },
                                    saveAsImage: { show: true }
                                }
                            },
                            legend: {
                                data: ['合計筆數', '合計金額']
                            },
                            xAxis: {
                                data: xcoordinates
                            },
                            yAxis: [
                                {
                                    type: 'value',
                                    name: '筆數',
                                    min: 0,
                                    axisLabel: {
                                        formatter: '{value}'
                                    }
                                },
                                {
                                    type: 'value',
                                    name: '金額',
                                    min: 0,
                                    axisLabel: {
                                        formatter: '{value}'
                                    }
                                }
                            ],
                            series: [{
                                name: '合計筆數',
                                type: 'bar',
                                data: ycoordinates
                            },
                            {
                                name: '合計金額',
                                type: 'bar',
                                data: bcoordinates
                            }
                            ]
                        };
                        myChart.setOption(option, true);
                    }
                }
            });
        }

        $('#btnSearch').on("click", function () {
            // console.log("btnSeracb")
            if ($("#Btime").val() != "" && $("#Etime").val() != "") {
                var btime = $("#Btime").val();
                var etime = $("#Etime").val();
                var sdate = new Date(btime);
                var now = new Date(etime);
                var days = now.getTime() - sdate.getTime();
                var day = parseInt(days / (1000 * 60 * 60 * 24));
                if (day > 31) {
                    alert("查詢時間段範圍不能超過一個月！！！");
                    return false;
                }
                
                console.log(`btime ${btime}, etime ${etime}`)
                initGrid();
            }
        });

        $('#btnPrint').on("click", function () {
            btnPrint();
        });

        $('#btnExcel').on("click", function () {
            btn_Excel();
        });
    });

    function setColor(tableClassName) {
        var $table = $(tableClassName).eq(1);
        if ($table.length) {
            $table.find('tbody tr').each(function () {
                if ($(this).find('td[data-field="PayName"] div').html() == '合 計') {
                    $(this).attr('style', "background:#d2d2d2;color:blue");
                }
            })
        }
    }

    var layuiRowspan = function (fieldNameTmp, index, flag) {
        let fieldName = [];
        if (typeof fieldNameTmp == "string") {
            fieldName.push(fieldNameTmp);
        } else {
            fieldName = fieldName.concat(fieldNameTmp);
        }
        for (let i = 0; i < fieldName.length; i++) {
            execRowspan(fieldName[i], index, flag);
        }
    }

    var execRowspan = function (fieldName, index, flag) {
        // 1为不冻结的情况，左侧列为冻结的情况
        let fixedNode = index == "1" ? $(".layui-table-body")[index - 1] : (index == "3" ? $(".layui-table-fixed-r") : $(".layui-table-fixed-l"));
        // 左侧导航栏不冻结的情况
        let child = $(fixedNode).find("td");
        let childFilterArr = [];
        // 获取data-field属性为fieldName的td
        for (let i = 0; i < child.length; i++) {
            if (child[i].getAttribute("data-field") == fieldName) {
                childFilterArr.push(child[i]);
            }
        }
        // 获取td的个数和种类
        let childFilterTextObj = {};
        for (let i = 0; i < childFilterArr.length; i++) {
            let childText = flag ? childFilterArr[i].innerHTML : childFilterArr[i].textContent;
            if (childFilterTextObj[childText] == undefined) {
                childFilterTextObj[childText] = 1;
            } else {
                let num = childFilterTextObj[childText];
                childFilterTextObj[childText] = num * 1 + 1;
            }
        }
        let canRowspan = true;
        let maxNum;//以前列单元格为基础获取的最大合并数
        let finalNextIndex;//获取其下第一个不合并单元格的index
        let finalNextKey;//获取其下第一个不合并单元格的值
        for (let i = 0; i < childFilterArr.length; i++) {
            (maxNum > 9000 || !maxNum) && (maxNum = $(childFilterArr[i]).prev().attr("rowspan") && fieldName != "8" ? $(childFilterArr[i]).prev().attr("rowspan") : 9999);
            let key = flag ? childFilterArr[i].innerHTML : childFilterArr[i].textContent;//获取下一个单元格的值
            let nextIndex = i + 1;
            let tdNum = childFilterTextObj[key];
            let curNum = maxNum < tdNum ? maxNum : tdNum;
            if (canRowspan) {
                for (let j = 1; j <= curNum && (i + j < childFilterArr.length);) {//循环获取最终合并数及finalNext的index和key
                    finalNextKey = flag ? childFilterArr[i + j].innerHTML : childFilterArr[i + j].textContent;
                    finalNextIndex = i + j;
                    if ((key != finalNextKey && curNum > 1) || maxNum == j) {
                        canRowspan = true;
                        curNum = j;
                        break;
                    }
                    j++;
                    if ((i + j) == childFilterArr.length) {
                        finalNextKey = undefined;
                        finalNextIndex = i + j;
                        break;
                    }
                }
                childFilterArr[i].setAttribute("rowspan", curNum);
                if ($(childFilterArr[i]).find("div.rowspan").length > 0) {//设置td内的div.rowspan高度适应合并后的高度
                    $(childFilterArr[i]).find("div.rowspan").parent("div.layui-table-cell").addClass("rowspanParent");
                    $(childFilterArr[i]).find("div.layui-table-cell")[0].style.height = curNum * 38 - 10 + "px";
                }
                canRowspan = false;
            } else {
                childFilterArr[i].style.display = "none";
            }
            if (--childFilterTextObj[key] == 0 | --maxNum == 0 | --curNum == 0 | (finalNextKey != undefined && nextIndex == finalNextIndex)) {//||(finalNextKey!=undefined&&key!=finalNextKey)
                canRowspan = true;
            }
        }
    }

    function btn_Excel() {
        window.location.href = "/Report/ChargeRecord/ExportFile?Btime=" + $("#Btime").val() + "&Etime=" + $("#Etime").val();
    }

    function btnPrint() {
        $("#search").hide();
        $("#instructions").hide();
        var info = "匯總時段:" + $("#Btime").val() + " 至 " + $("#Etime").val();
        $("#toolbar").html(info);
        $("#toolbarInfo").show();

        $(".layui-col-md7").print({
            globalStyles: true,             //是否包含父文档的样式，默认为true
            mediaPrint: false,             //是否包含media='print'的链接标签。会被globalStyles选项覆盖，默认为false
            stylesheet: null,             //外部样式表的URL地址，默认为null
            noPrintSelector: ".no-print",//不想列印的元素的jQuery选择器，默认为".no-print"
            iframe: true,               //是否使用一个iframe来替代列印表单的弹出窗口，true为在本頁面进行列印，false就是说新开一个頁面列印，默认为true
            append: null,              //将内容添加到列印内容的后面
            prepend: null,            //将内容添加到列印内容的前面，可以用来作为要列印内容
            deferred: $.Deferred().done(function () {
                $("#search").show();
                $("#toolbarInfo").hide();
                $("#instructions").show();
            })
        });
    }

</script>