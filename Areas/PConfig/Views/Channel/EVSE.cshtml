@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title>充電樁狀態</title>
  <link href="~/Content/layui/css/layui.css" rel="stylesheet" />
  <link href="~/Content/framework/css/console.css" rel="stylesheet" />
  <link href="~/Content/framework/css/animate.css" rel="stylesheet" />
  <link href="~/Content/framework/css/tabulator-override.css" rel="stylesheet" />
  <link href="~/Content/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
  <link href="~/Content/tailwind/dist/output.css" rel="stylesheet" />
  <script src="~/Content/jquery/jquery.min.js"></script>
  <script src="~/Content/layui/layui.js"></script>
  <script src="~/Content/framework/js/global.js"></script>
  <script src="~/Content/framework/js/com.js"></script>
  <script src="~/Content/splide/splide.min.js"></script>
  <link href="~/Content/splide/splide.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js"></script>
  <script src="~/Content/stream/flv.js"></script>
  <script src="~/Content/stream/stream.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://unpkg.com/tabulator-tables/dist/css/tabulator.min.css" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC&display=swap" rel="stylesheet">

  <script type="text/javascript" src="https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js"></script>

  <style>

        .layui-table-cell {
            height: 44px !important;
            line-height: 28px;
            padding: 8px 15px;
            position: relative;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            box-sizing: border-box;
        }

        .panel {
          @* padding : 0 !important; *@
          margin : 0;
          height: 100%;
        }

        iframe {
          padding: 0 !important;
          height: 100%;
        }

        html {
          height: 100%;

        }

        html * {
          font-family: 'Noto Sans TC', sans-serif !important;

        }

        @* button.active {

          background-color: unset !important;
        } *@

        .index-footer {
          display : none !important;
        }

        body {
          min-height: 1250px;
          overflow-y: scroll !important;
          overflow-x: hidden;
        }

        @* .splide__ {

          height: 750px;
        } *@


        .splide-track {

          /*overflow-y: visible;*/
          overflow: visible !important;
          min-height: 350px;
          @* height : 100%; *@
        }


        .tab-content {
          padding : 5px;
          height: 100%;
        }

        .tabulator-popup {
          transform: translateY(-150px);
        }
        
        
        .charging-status-icon {
          height : 150px;
        }
        
        .charging-info-container {
          display: flex;
          flex-direction: row;
        
        }
        .charging-info-item {
          display: block;
        }
        
        .plate-image {
          
          height : 50px
        
        }
        
        .raw-vehicle-image {
        
          padding : 7.5px;
        }

    </style>
</head>
<body>
<div class="panel animated fadeIn bg-white">
  
  
  <div id = "splide-container-ChargeBox-1"></div>
  <div id = "splide-container-ChargeBox-2"></div>
  <div id = "splide-container-ChargeBox-3"></div>
  <div id = "splide-container-ChargeBox-4"></div>

</div>
</body>
</html>



<script>

  // global variable

  var streamDeviceMap = new Map()
  
  var chargingIcon = "/Content/framework/images/charging.gif"
  var occupiedIcon = "/Content/framework/images/occupied.gif"
  var availableIcon = "/Content/framework/images/available.jpg"
  var plateImage = "/Content/framework/images/plate_test.jpg"
  var rawImage = "/Content/framework/images/raw_vehicle_test.jpg"


  async function async_init () {
    getChargeStationStatus(true)
  }
  
  async_init()

  async function getChargeStationStatus (init = false) {
    var f = "getChargeStationStatus"
    var xhr = new XMLHttpRequest();
    xhr.open("Post", "/api/EVSE/GetChargeStationStatus", true);
    xhr.setRequestHeader("Content-Type", "application/json");
    // Define a callback function when the request completes
    xhr.onload = function () {
      if (xhr.status >= 200 && xhr.status < 300) {
        // Request was successful
        var jsonResponse = JSON.parse(xhr.responseText)
        console.log('get chargeStationStatus json response => ', jsonResponse)
        // console.log('get chargeStationStatus json response.data => ', jsonResponse.data)
        console.log('get chargeStationStatus json response.chargeBoxesStatus => ', jsonResponse.chargeBoxesStatus)
        var chargeBoxesStatusList = jsonResponse.chargeBoxesStatus
        console.log(`${f} chargeBoxStatusList => ${chargeBoxesStatusList}`)
        chargeBoxesStatusList.forEach((chargeBoxStatus) => {
          var chargeBoxElementID = `chargebox-status-${chargeBoxStatus.localChargeBoxID}`
          if (init) {
            if (!streamDeviceMap.has("ChargeBox")){
              streamDeviceMap.set("ChargeBox", [])
              streamDeviceMap.get("ChargeBox").push(chargeBoxStatus)
            }
            createSplideBlock ("ChargeBox", streamDeviceMap, 1) //
            createSplideBlock ("ChargeBox", streamDeviceMap, 2) //
            createSplideBlock ("ChargeBox", streamDeviceMap, 3) //
            createSplideBlock ("ChargeBox", streamDeviceMap, 4) //
            console.log(`${f} => `, streamDeviceMap)
            // buildAPSCoinStatus(chargeBoxElementID)
            
            var sm = window.matchMedia("(max-width: 768px)")
            var splideChargeBoxStatus = new Splide(`.splide.ChargeBox`, {
              perPage : sm.matches ? 1 : 3,
              arrows : false,
              updateOnMove : true,
            });
            console.log(`${f} => splidemount`)
            splideChargeBoxStatus.mount();
            console.log(`${f} => splidemount (after)`)
            // chartMap.get(apsElementID).updateSeries([{ name : "水位", data : [apsStatus.Coin5, apsStatus.Coin10, apsStatus.Coin50, apsStatus.Bill100]}] )
          } else {
            // console.log("updateSeries apscoinstatus .... ")
            @* chartMap.get(apsElementID).updateSeries(nam[apsStatus.coin5, apsStatus.coin10, apsStatus.coin50, apsStatus.bill100]) *@
            // chartMap.get(apsElementID).updateSeries([{ name : "水位", data : [apsStatus.Coin5, apsStatus.Coin10, apsStatus.Coin50, apsStatus.Bill100]}] )
            @* chartMap.get(apsElementID).updateSeries([{ name : "水位", data : [5, 10, 50, 100] }]) *@
          }
        })
      } 
      else {
      }
    };
    // Prepare and send the data
    var data = JSON.stringify({ key: "value" });
    xhr.send(data); 
  }
  
  
  
  function createSplideBlock (deviceType, streamDeviceMap, splideIndex) {
    
    var f = `createSplideBlock ${deviceType}`
    var splideContainerID = `splide-container-${deviceType}-${splideIndex}`
    
    console.log(`${f} --- 1`)
    var splideListID = `splide-list-${deviceType}`
    var splideContainer = document.getElementById(splideContainerID)
    var splidType = null
    if (deviceType === 'ChargeBox') {
      splideType = 'ChargeBox'
    }
    console.log(`${f} --- 2`)
    var block = `
      <section class = "splide ${deviceType} splide__" aria-labelledby = "carousel-heading">
        <div class = "splide__track splide-track">
          <ul id = "${splideListID}" class = "splide__list ${splideType}">
          
          </ul>
        </div>
      </section>
    `
    console.log(`${f} --- 3`)
    // console.log(`${f} streamDeviceMap = `, streamDeviceMap)
    splideContainer.insertAdjacentHTML("beforeend", block)
    if (deviceType === 'ChargeBox') {
      var streamDeviceInfoList = streamDeviceMap.get(deviceType)
      streamDeviceInfoList.forEach((streamDeviceInfo, i) => {
        var streamID = `${deviceType}-${streamDeviceInfo.localChargeBoxID}`
        console.log(`${f} streamID = ${streamID}`)
        console.log(`${f} streamDeviceInfo = `, streamDeviceInfo)
        console.log(`${f} streamDeviceInfo.lanStreamURL `, streamDeviceInfo.lanStreamURL)
        // console.log(`${f} streamDeviceInfo[lanStreamURL] `, streamDeviceInfo('lanStreamURL'))
        console.log(`${f} streamDeviceInfo.wanStreamURL `, streamDeviceInfo.wanStreamURL)
        if (streamDeviceInfo.lanStreamURL != null || streamDeviceInfo.wanStreamURL != null){
          createChargeBoxBlock(splideListID, streamID, streamDeviceInfo)
        }
        console.log(`${f} --- 6`)
      });
    } 
    else {
      console.log(`deviceType ${deviceType} is not exist`)
    }

  }

  function createChargeBoxBlock (containerID, streamID, streamDeviceInfo) {
    
    var f = "createChargeBoxBlock"
    console.log(`${f} --- 1`)
    var container = document.getElementById(containerID)
    console.log(`${f} --- 2`)
    var sm = window.matchMedia("(max-width: 768px)")
    
    var chargeBoxStatusDivCls = 'p-1.5 w-full text-1xl border-b my-1'
    
    if (sm.matches) {
      chargeBoxStatusDivCls = 'p-1.5 w-full text-lg border-b my-1'
    }
    
    
    var block = ` <li class = "splide__slide" style = "padding : 0px 20px">
      <div class = "rounded overflow-hidden shadow-lg">
        <div class = "px-6 py-4">
          <div>${streamDeviceInfo.localChargeBoxID} 號樁</div>
          <div style = "display:flex; justify-content:space-evenly; margin:0px; margin-top : 10px; margin-bottom : 15px">
            <video name = "video-element-[${streamID}]" class = "centeredVideo" style = "width : 100%" controls autoplay>
              Your browser is too old which doesn't support HTML5 video.
            </video>
          </div>
          <div style = "display : flex; justify-content : space-between;">
            <div> @* button group 1 *@
              <button onclick = "chargeBoxControl(${streamDeviceInfo.localChargeBoxID}, 1)" class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white dark:text-white">
                <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                  開始充電
                </span>
              </button>
              <button onclick = "chargeBoxControl(${streamDeviceInfo.localChargeBoxID}, 0)" class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white dark:text-white">
                <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                  停止充電
                </span>
              </button>
            </div>

            <div style = "display : flex; align-items : center;"> @* button group 2 即時影像 *@
              <label class="relative inline-flex items-center cursor-pointer" style = "float : right">
                <input checked id = 'video-element-[${streamID}]-live' type="checkbox" value="" class="sr-only peer">
                <div class="w-11 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
                @* <div class="w-15 h-8 bg-gray-200 peer-focus:outline-none rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div> *@
                <span class="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">即時影像</span>
              </label>
            </div>
          </div>
          <div class = "flex-row">
            <div class = "flex flex-col items-center justify-center">
              <div class = "flex flex-row justify-evenly w-full py-5">
                <image class = 'charging-status-icon' src = '${chargingIcon}'>
                <div class = "flex flex-col justify-evenly">
                  <image class = 'plate-image' src = '${plateImage}'>
                  <span class = "fg-cyan-500 font-black">BFB0823</span>
                  <button onclick = "chargeBoxControl(${streamDeviceInfo.localChargeBoxID}, 1)" class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white dark:text-white">
                    <span class="relative px-10.5 py-2.5 transition-all text-white ease-in duration-75 dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                      修改車牌
                    </span>
                  </button>
                </div>
              </div>
              <image class = 'raw-vehicle-image' src = '${rawImage}'>
            </div>
            <div class = 'flex flex-row items-center justify-center w-full'>
            
              <div class = "inline-flex flex-col basis-1/3">
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">狀態</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">感測器</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">車牌號碼</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">充電速度</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">已充電量</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">充電費用</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">佔位費用</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">剩餘時間</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">進場時間</span></div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "bg-cyan-400 text-white rounded-full px-6 py-1.3">充電開始</span></div>
              </div>
              <div class = "inline-flex flex-col w-half grow">
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 充電中 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 有物體 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> ABC1234 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 32KWH </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 7KWH </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 20 元 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 100 元 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 20:12 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 2023-12-12 22:22:22 </span> </div>
                <div class = '${chargeBoxStatusDivCls}'> <span class = "px-6 py-1.3"> 2023-12-12 11:11:11 </span> </div>
              </div>
            </div>
          </div>
      </div>
    </li>`
    console.log(`${f} --- 3`)
    container.insertAdjacentHTML("beforeend", block)
    console.log(`${f} --- 4`)
    // flv_load(streamID, streamDeviceInfo) 
    console.log(`${f} --- 5`)
  }
  
  
  function chargeBoxControl (localChargeBoxID, action) {
    
    
  }
  
</script>


